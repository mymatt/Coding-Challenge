---

- name: Update and upgrade apt packages
  become: 'True'
  apt:
    upgrade: yes
    update_cache: yes

- name: Installation
  apt:
    name: "{{ packages }}"
    update_cache: yes
    state: latest
  vars:
    packages:
      - apache2
      - apache2-utils
      - libapache2-mod-wsgi-py3
      - chrony
      - telnet
      - mtr
      - tree
      - git
      - python3-pip
      - libapache2-modsecurity

- name: Create home
  file:
    path: "{{ apache_dir }}"
    state: directory

- name: get Git Repo Code
  git:
    repo: "{{ git_repo }}"
    dest: "{{ repo_folder }}"
    update: yes

- name: install Python requirements (using python3)
  pip:
    chdir: "{{ repo_folder }}"
    requirements: requirements.txt

- name: ensure app runs as python3
  lineinfile:
    path: "{{ repo_folder }}/tiny_app.py"
    line: '#!/usr/bin/env python3'
    insertbefore: BOF

- name: copy python file to web directory
  copy:
     src: "{{ repo_folder }}/tiny_app.py"
     dest: "{{ apache_dir }}"
  delegate_to: localhost

- name: add wsgi file
  template:
    src: tiny_app.wsgi.j2
    dest: "{{ apache_dir }}/tiny_app.wsgi"
  delegate_to: localhost

- name: add virtualhost
  template:
    src: tiny_app.conf.j2
    dest: "{{ apache_config }}/tiny_app.conf"
  delegate_to: localhost

- name: Web Server config directory - apache2.conf
  shell: 'sudo sed -i -e "s/^<Directory \\/var\\/www.*$/<Directory \\/var\\/www\\/python\\/>/" /etc/apache2/apache2.conf'

- name: enable virtual site
  command: a2ensite tiny_app.conf

- name: disable default site
  command: a2dissite 000-default.conf

- name: enable mod-wsgi
  command: a2enmod wsgi

- name: enable mod-security
  command: a2enmod mod-security
